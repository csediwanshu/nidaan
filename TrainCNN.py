# -*- coding: utf-8 -*-
"""PneumoniaCNN.ipynb

Automatically generated by Colaboratory.
"""

##Import Data from Google Drive

# from google.colab import drive
# drive.mount('/gdrive')
# !cp /gdrive/"My Drive"/chest-xray-pneumonia.zip ./
# !unzip -q chest-xray-pneumonia.zip
# !unzip -q chest_xray.zip

inp = 512
vgg_wts = 'vgg19_weights_tf_dim_ordering_tf_kernels.h5'

from keras.layers import *
from keras.models import *
from keras.preprocessing.image import ImageDataGenerator

train_datagen = ImageDataGenerator(
        rescale=1./255,
        shear_range=0.2,
        zoom_range=0.2,
        horizontal_flip=True)

test_datagen = ImageDataGenerator(rescale=1./255)

train_generator = train_datagen.flow_from_directory(
        'chest_xray/train/',
        target_size=(inp, inp),
        batch_size=32,
        class_mode='binary')

validation_generator = test_datagen.flow_from_directory(
        'chest_xray/train/',
        target_size=(inp, inp),
        batch_size=32,
        class_mode='binary')

model = Sequential()
model.add(Conv2D(64, kernel_size = (3,3), strides = (1,1), activation = 'relu', padding='valid',input_shape = (inp,inp,3), name='block1_conv1'))
model.add(Conv2D(64, kernel_size = (3,3), strides = (1,1), activation = 'relu',padding='valid', name='block1_conv2'))
model.add(MaxPooling2D(pool_size=(2,2),strides = (2,2),padding='valid',name='block1_pool'))

model.add(Conv2D(128, kernel_size = (3,3), strides = (1,1), activation = 'relu', padding='valid', name='block2_conv1'))
model.add(Conv2D(128, kernel_size = (3,3), strides = (1,1), activation = 'relu',padding='valid', name='block2_conv2'))
model.add(MaxPooling2D(pool_size=(2,2),strides = (2,2),padding='valid',name='block2_pool'))

model.add(Conv2D(256, kernel_size = (3,3), strides = (1,1), activation = 'relu', padding='valid', name='block3_conv1'))
model.add(Conv2D(256, kernel_size = (3,3), strides = (1,1), activation = 'relu',padding='valid', name='block3_conv2'))
model.add(MaxPooling2D(pool_size=(2,2),strides = (2,2),padding='valid',name='block3_pool'))

model.add(GlobalAveragePooling2D())
model.add(Dense(1028, activation = 'relu'))
model.add(Dense(512, activation = 'relu'))
model.add(Dense(1, activation = 'sigmoid'))

## Download VGG19 Weights

# if not os.path.exists('./vgg19_weights_tf_dim_ordering_tf_kernels.h5'):
#     !wget https://github.com/fchollet/deep-learning-models/releases/download/v0.1/vgg19_weights_tf_dim_ordering_tf_kernels.h5

model.load_weights(vgg_wts, by_name=True)
model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])

model.fit_generator(train_generator, steps_per_epoch=5216//32, epochs=1, 
                    verbose=1, validation_data=validation_generator, validation_steps=5216//32)

model.save_weights('Pneumonia_model.h5')

